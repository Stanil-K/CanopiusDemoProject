@* @model List<Data.Models.Claim>

<h1>All Claims</h1>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Claim ID</th>
            <th>Policy ID</th>
            <th>Date of Claim</th>
            <th>Claim Amount</th>
            <th>Claim Description</th>
            <th>Claim Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var claim in Model)
        {
            <tr>
                <td>@claim.Id</td>
                <td>@claim.PolicyId</td>
                <td>@claim.DateOfClaim</td>
                <td>@claim.ClaimAmount</td>
                <td>@claim.ClaimDescription</td>
                <td>@claim.ClaimStatus</td>
                <td>
                    <a asp-action="Details" asp-route-id="@claim.Id" class="link-secondary">Details</a> |
                    <a asp-action="Update" asp-route-id="@claim.Id" class="link-warning">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@claim.Id" class="link-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<a asp-action="Add">Add New Claim</a>
 *@
 
<h1>All Claims</h1>

@(Html.Kendo().Grid<Claim>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.Id).Title("Claim ID");
        columns.Bound(c => c.ClaimAmount);
        columns.Bound(c => c.ClaimStatus);
        columns.Bound(c => c.DateOfClaim).Format("{0:dd/MM/yyyy}");
        columns.Command(command =>
                {
                    command.Custom("Update").Text("Update").Click("onUpdate");
                    command.Custom("Details").Text("Details").Click("onDetails");
                    command.Destroy();
                }).Width(300);
    })
    .ToolBar(t =>
    {
        t.ClientTemplate("<button class='myButtonClass' onclick='location.href=\"" + Url.Action("Add", "Customer") + "\";'>Add New Claim</button>");
    })
    .Pageable()
    .Sortable()
    .Scrollable()
    .Filterable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(5)
        .Read(read => read.Action("GetAllClaimsJSON", "Claim"))
        .Create(c => c.Action("Add", "Claim"))
        .Update(u => u.Action("Update", "Claim"))
        .Destroy(d => d.Action("Delete", "Claim"))
    )
)

<script>

    function onUpdate(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = '/Claim/Update/' + dataItem.Id;
    }

    function onDetails(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = '/Claim/Details/' + dataItem.Id;
    }

</script>

<style>
    h4 {
        color: whitesmoke;
    }

    .k-button-text {
        color: indigo;
    }

    .myButtonClass {
        color: whitesmoke;
        background: indigo;
        border-radius: 5px;
        border: 1px;
        border-color: indigo;
        padding: 3px 5px;
        margin: 3px 5px;
    }

</style>