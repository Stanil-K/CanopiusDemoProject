@* @model Data.Models.Policy

<style>
    label {
        color: whitesmoke;
    }
</style>

<h1>Add Policy</h1>

<form asp-action="Add" method="post">
    <div>
        <label asp-for="CustomerId">Customer ID</label>
        <select asp-for="CustomerId" asp-items="@ViewBag.Customers"></select>
    </div>
    <div>
        <label asp-for="PolicyType">Policy Type</label>
        <input asp-for="PolicyType" />
    </div>
    <div>
        <label asp-for="StartDate">Start Date</label>
        <input asp-for="StartDate" type="date" />
    </div>
    <div>
        <label asp-for="EndDate">End Date</label>
        <input asp-for="EndDate" type="date" />
    </div>
    <div>
        <label asp-for="PremiumAmount">Premium Amount</label>
        <input asp-for="PremiumAmount" />
    </div>
    <button type="submit">Add</button>
</form>

<a asp-action="All">Back to List</a> *@


<div id="validation-success"></div>
@(Html.Kendo().Form<Policy>()
    .Name("form")
    .HtmlAttributes(new { action = "Add", method = "POST" })
    .Validatable(v =>
    {
        v.ValidateOnBlur(true);
        v.ValidationSummary(vs => vs.Enable(false));
    })
    .Items(items =>
    {
        items.AddGroup()
            .Label("Add New Policy")
            .Items(i =>
            {
                i.Add()
                    .Field(f => f.CustomerId)
                    .Label(l => l.Text("Customer"))
                    .Editor(e => e.DropDownList()
                        .BindTo((IEnumerable<SelectListItem>)ViewBag.Customers)
                    );

                i.Add()
                    .Field(f => f.PolicyType)
                    .Label(l => l.Text("Policy type:"));

                i.Add()
                    .Field(f => f.StartDate)
                    .Label(l => l.Text("Start date:"))
                    .Editor(e => e.DatePicker());

                i.Add()
                    .Field(f => f.EndDate)
                    .Label(l => l.Text("End date:"))
                    .Editor(e => e.DatePicker());

                i.Add()
                    .Field(f => f.PremiumAmount)
                    .Label(l => l.Text("Premium amount:"));
            });
    })
    .Events(ev => ev.ValidateField("onFormValidateField").Submit("onFormSubmit").Clear("onFormClear"))
)

<style>
    label {
        color: whitesmoke;
    }

    .k-form fieldset legend {
        color: whitesmoke;
    }
</style>

<script>
    function onFormValidateField(e) {
        $("#validation-success").html("");
    }

    function onFormSubmit(e) {
        if (!$("#form").valid()) {
            e.preventDefault();
        }
    }

    function onFormClear(e) {
        $("#validation-success").html("");
    }
</script>

