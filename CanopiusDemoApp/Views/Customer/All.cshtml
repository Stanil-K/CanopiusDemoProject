<h4>All Customers</h4>

@(
Html.Kendo().Grid<Customer>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Id).Title("Customer ID");
        columns.Bound(p => p.Name);
        columns.Bound(p => p.Phone);
        columns.Bound(p => p.Email);
        columns.Command(command =>
                {
                    command.Custom("Update").Text("Update").Click("onUpdate");
                    command.Custom("Details").Text("Details").Click("onDetails");
                    command.Destroy();
                }).Width(300);

    })
    .ToolBar(t =>
    {
        t.ClientTemplate("<button class='myButtonClass' onclick='location.href=\"" + Url.Action("Add", "Customer") + "\";'>Add New Customer</button>");
    })
    .Pageable()
    .Sortable()
    .Scrollable()
    .Filterable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(5)
        .Model(m =>
        {
            m.Id(p => p.Id);
        })
        .Read(read => read.Action("GetAllCustomersJSON", "Customer"))
        .Create(c => c.Action("Add", "Customer"))
        .Update(u => u.Action("Update", "Customer"))
        .Destroy(d => d.Action("Delete", "Customer"))
     )
)

<script>

    function onUpdate(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = '/Customer/Update/' + dataItem.Id;
    }

    function onDetails(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = '/Customer/Details/' + dataItem.Id;
    }

</script>

<style>
    h4{
        color: whitesmoke;
    }

    .k-button-text{
        color: indigo;
    }

    .myButtonClass {
        color:whitesmoke;
        background:indigo;
        border-radius:5px;
        border:1px;
        border-color:indigo;
        padding: 3px 5px;
        margin: 3px 5px;
    }

</style>